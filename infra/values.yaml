## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName
#   storageClass: myStorageClass

image:
  registry: ""
  repository: "zgw/zgw-catalog"
  tag: main
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName


## Specifies the application name (required to be set)
##
name: "zgw-catalog"

## Specifies the application resource kind
##
appKind: Deployment

## Optionally, change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'.
## By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller
## to keep resolving names inside the k8s network, use ClusterFirstWithHostNet.
##
dnsPolicy: ClusterFirst

## Pod securityContext
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
##
podSecurityContext:
  enabled: true
  fsGroup: 1000
  runAsUser: 1000
  runAsGroup: 1000

## Container security context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
##
## containerSecurityContext:
##   capabilities:
##     drop:
##     - ALL
##   readOnlyRootFilesystem: true
##   runAsNonRoot: true
##   runAsUser: 1001
##   allowPrivilegeEscalation: false
##
containerSecurityContext:
  enabled: true
  # readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsNonRoot: true
  allowPrivilegeEscalation: false

## Application service parameters
##
service:
  ## Kubernetes service type and port number
  ##
  type: ClusterIP
  # clusterIP: None

  ## Specify the default service port and targetPort
  ## Note: port or ports must be provided to enable service!
  ##
  port: 8080
  targetPort: 8080

## Set up update strategy for Kibana installation. Set to Recreate if you use persistent volume that cannot be mounted by more than one pods to makesure the pods are destroyed first.
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## Example:
# updateStrategy:
#  type: RollingUpdate
#  rollingUpdate:
#    maxSurge: 25%
#    maxUnavailable: 25%
updateStrategy:
  type: RollingUpdate

##  We usually recommend not to specify default resources and to leave this as a conscious
##  choice for the user. This also increases chances charts run on environments with little
##  resources, such as Minikube. If you do want to specify resources, uncomment the following
##  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
##
## resources:
##   limits:
##     cpu: 100m
##     memory: 128Mi
##   requests:
##     cpu: 100m
##     memory: 128Mi
resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

## Autoscaling configuration
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  # targetCPU: 50
  # targetMemory: 50

## Pod anti-affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
## Allowed values: soft, hard
##
podAntiAffinityPreset: soft

## Configure options for liveness and readiness probes
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
## Note: probes are disabled by default and have no checks defined
##
livenessProbe:
  enabled: false
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: false
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
startupProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1